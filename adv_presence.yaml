blueprint:
  name: Advanced Presence Control with MQTT Button and Configurable Notifications
  description: >-
    Automates home/away modes based on a binary_sensor. Includes a guest mode 
    that activates an MQTT button (single press for home, hold for away). 
    An input_boolean reflects the current state (on=Home, off=Away),
    and a configurable service sends notifications.
  domain: automation
  source_url: https://github.com/wkethman/adv_presence/edit/main/adv_presence.yaml
  input:
    presence_sensor:
      name: Presence Sensor
      description: The binary_sensor to track presence (on = Home, off = Away).
      selector:
        entity:
          domain: binary_sensor
    home_mode_boolean:
      name: Home Mode Boolean
      description: The input_boolean that will represent the home's state (on = Home, off = Away).
      selector:
        entity:
          domain: input_boolean
    guest_mode_toggle:
      name: Guest Mode Toggle
      description: An input_boolean that enables (on) or disables (off) Guest Mode.
      selector:
        entity:
          domain: input_boolean
    notification_service:
      name: Notification Service
      description: The service to call for mode alerts (e.g., notify.mobile_app_your_phone).
      selector:
        service:
    mqtt_topic:
      name: MQTT Topic
      description: The MQTT topic your button publishes its state to.
      default: "zigbee2mqtt/<device_name>/action"
      selector:
        text:
    payload_click:
      name: Payload for Single Press
      description: The MQTT payload that signifies a single press/click.
      default: "single"
      selector:
        text:
    payload_hold:
      name: Payload for Hold
      description: The MQTT payload that signifies a hold action.
      default: "hold"
      selector:
        text:
    away_delay:
      name: Away Delay
      description: Time (in seconds) to wait before setting away mode. This applies to all away actions.
      default: 120
      selector:
        number:
          min: 0
          max: 600
          unit_of_measurement: seconds

variables:
  home_mode_boolean: !input home_mode_boolean
  guest_mode: "{{ states(input('guest_mode_toggle')) == 'on' }}"
  is_home: "{{ is_state(input('presence_sensor'), 'on') }}"

trigger:
  - platform: state
    entity_id: !input presence_sensor
    to:
      - "on"
      - "off"
  - platform: state
    entity_id: !input guest_mode_toggle
  - platform: mqtt
    topic: !input mqtt_topic
    payload: !input payload_click
    id: "mqtt_click"
  - platform: mqtt
    topic: !input mqtt_topic
    payload: !input payload_hold
    id: "mqtt_hold"

condition: []

action:
  - choose:
      # OPTION 1: Set AWAY mode (manual or automatic).
      - conditions:
          - condition: or
            conditions:
              # Condition A: Manual away via hold, ONLY if guest mode is on.
              - condition: and
                conditions:
                  - condition: trigger
                    id: "mqtt_hold"
                  - "{{ guest_mode }}"
              # Condition B: Automatic away when sensor is off and guest mode is off.
              - "{{ not is_home and not guest_mode }}"
        sequence:
          - delay:
              seconds: !input away_delay
          - service: input_boolean.turn_off
            target:
              entity_id: !input home_mode_boolean

      # OPTION 2: Set HOME mode.
      # Happens if sensor is 'on' OR if guest confirmation click is received WHILE guest mode is on.
      - conditions:
          - "{{ is_home or (trigger.id == 'mqtt_click' and guest_mode) }}"
        sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: !input home_mode_boolean
